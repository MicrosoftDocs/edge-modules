"ID" : "99F50850-D9D9-4089-A20D-1AD4EA920BFE"
"Status": "Active"
"Create Date" : "3/26/2022"
"Review Date" : "3/26/2022"
"Publish Date" : "3/26/2022"
"Reviewer" : "abha"
"Author" : "mabrigg"
"Service" : "aks-hci"
"Area"  : "known-issues-workload-clusters"
"Tags"  : "['proof', 'concept']"
"Source"  : "bugs"
"Source ID"  : "1"
"Source URL"  : "https://wwww.bugtool.com/1"
"Target URL"  : "https://docs.microsoft.com/page"
"Schema" : "known-issue"
"Issue" : |
   The API server isn't responsive after several days
"Description" : |
   When attempting to bring up an AKS on Azure Stack HCI deployment after a few days, `Kubectl` didn't execute any of its commands. The Key Management Service (KMS) plug-in log displayed the error message `rpc error:code = Unauthenticated desc = Valid Token Required_. After running [Repair-AksHciCerts](./reference/ps/repair-akshcicerts.md) to try to fix the issue, a different error appeared: _failed to repair cluster certificates`.

   The [Repair-AksHciClusterCerts](./reference/ps/repair-akshciclustercerts.md) cmdlet fails if the API server is down. If AKS on Azure Stack HCI hasn't been upgraded for 60 or more days, when you try to restart the KMS plug-in, it won't start. This failure also causes the API server to fail.
"Fix" : |
   To fix this issue, you need to manually rotate the token and then restart the KMS plug-in and container to get the API server backup. To do this, run the following steps:

   1. Rotate the token by running the following command:

      ```
      $ mocctl.exe security identity rotate --name "KMSPlugin-<cluster-name>-moc-kms-plugin" --encode=false --cloudFqdn (Get-AksHciConfig).Moc.cloudfqdn > cloudlogin.yaml
      ```

   2. Copy the token to the VM using the following command. The `ip` setting in the command below refers to the IP address of the AKS host's control plane.

      ```
      $ scp -i (Get-AksHciConfig).Moc.sshPrivateKey .\cloudlogin.yaml clouduser@<ip>:~/cloudlogin.yaml $ ssh -i (Get-AksHciConfig).Moc.sshPrivateKey clouduser@<ip> sudo mv cloudlogin.yaml /opt/wssd/k8s/cloudlogin.yaml
      ```

   3. Restart the KMS plug-in and the container. 

      To get the container ID, run the following command:

      ```
      $ ssh -i (Get-AksHciConfig).Moc.sshPrivateKey clouduser@<ip> "sudo docker container ls | grep 'kms'"
      ```

      The output should appear with the following fields:

      ```Output
      CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
      ``` 

      The output should look similar to this example:
      ```Output
      4169c10c9712 f111078dbbe1 "/kms-plugin" 22 minutes ago Up 22 minutes k8s_kms-plugin_kms-plugin-moc-lll6bm1plaa_kube-system_d4544572743e024431874e6ba7a9203b_1
      ```

   4. Finally, restart the container by running the following command:

      ```
      $ ssh -i (Get-AksHciConfig).Moc.sshPrivateKey clouduser@<ip> "sudo docker container kill <Container ID>"
      ```
